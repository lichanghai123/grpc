<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.DnsKpiIndexMapper">
  <resultMap id="BaseResultMap" type="com.pojo.DnsKpiIndex">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="client_location" jdbcType="VARCHAR" property="clientLocation" />
    <result column="client_mac_address" jdbcType="VARCHAR" property="clientMacAddress" />
    <result column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="client_ip" jdbcType="VARCHAR" property="clientIp" />
    <result column="server_ip" jdbcType="VARCHAR" property="serverIp" />
    <result column="total_num" jdbcType="INTEGER" property="totalNum" />
    <result column="invalid_num" jdbcType="INTEGER" property="invalidNum" />
    <result column="no_error_num" jdbcType="INTEGER" property="noErrorNum" />
    <result column="avg_delay" jdbcType="REAL" property="avgDelay" />
    <result column="dev_ip" jdbcType="VARCHAR" property="devIp" />
    <result column="collect_time" jdbcType="TIMESTAMP" property="collectTime" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from dns_kpi_index
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.pojo.DnsKpiIndex">
    insert into dns_kpi_index (id, client_location, client_mac_address, 
      uuid, client_ip, server_ip, 
      total_num, invalid_num, no_error_num, 
      avg_delay, dev_ip, collect_time, 
      start_time, end_time)
    values (#{id,jdbcType=BIGINT}, #{clientLocation,jdbcType=VARCHAR}, #{clientMacAddress,jdbcType=VARCHAR}, 
      #{uuid,jdbcType=VARCHAR}, #{clientIp,jdbcType=VARCHAR}, #{serverIp,jdbcType=VARCHAR}, 
      #{totalNum,jdbcType=INTEGER}, #{invalidNum,jdbcType=INTEGER}, #{noErrorNum,jdbcType=INTEGER}, 
      #{avgDelay,jdbcType=REAL}, #{devIp,jdbcType=VARCHAR}, #{collectTime,jdbcType=TIMESTAMP}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="batchInsert" parameterType="com.pojo.DnsKpiIndex">
        insert into ${tableName} (id, client_location, client_mac_address, 
      uuid, client_ip, server_ip, 
      total_num, invalid_num, no_error_num, 
      avg_delay, dev_ip, collect_time,start_time, end_time
      )
        values
        <foreach collection="trafficDatas" item="trafficData" separator=",">
            (#{trafficData.id,jdbcType=BIGINT}, #{trafficData.clientLocation,jdbcType=VARCHAR}, #{trafficData.clientMacAddress,jdbcType=VARCHAR}, 
      #{trafficData.uuid,jdbcType=VARCHAR}, #{trafficData.clientIp,jdbcType=VARCHAR}, #{trafficData.serverIp,jdbcType=VARCHAR}, 
      #{trafficData.totalNum,jdbcType=INTEGER}, #{trafficData.invalidNum,jdbcType=INTEGER}, #{trafficData.noErrorNum,jdbcType=INTEGER}, 
      #{trafficData.avgDelay,jdbcType=REAL}, #{trafficData.devIp,jdbcType=VARCHAR}, #{trafficData.collectTime,jdbcType=TIMESTAMP},
      #{trafficData.startTime,jdbcType=TIMESTAMP}, #{trafficData.endTime,jdbcType=TIMESTAMP})
        </foreach>
    </insert>
  <update id="updateByPrimaryKey" parameterType="com.pojo.DnsKpiIndex">
    update dns_kpi_index
    set client_location = #{clientLocation,jdbcType=VARCHAR},
      client_mac_address = #{clientMacAddress,jdbcType=VARCHAR},
      uuid = #{uuid,jdbcType=VARCHAR},
      client_ip = #{clientIp,jdbcType=VARCHAR},
      server_ip = #{serverIp,jdbcType=VARCHAR},
      total_num = #{totalNum,jdbcType=INTEGER},
      invalid_num = #{invalidNum,jdbcType=INTEGER},
      no_error_num = #{noErrorNum,jdbcType=INTEGER},
      avg_delay = #{avgDelay,jdbcType=REAL},
      dev_ip = #{devIp,jdbcType=VARCHAR},
      collect_time = #{collectTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, client_location, client_mac_address, uuid, client_ip, server_ip, total_num, 
    invalid_num, no_error_num, avg_delay, dev_ip, collect_time
    from dns_kpi_index
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, client_location, client_mac_address, uuid, client_ip, server_ip, total_num, 
    invalid_num, no_error_num, avg_delay, dev_ip, collect_time
    from dns_kpi_index
  </select>
</mapper>