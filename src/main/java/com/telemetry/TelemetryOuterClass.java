// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: telemetry.proto

package com.telemetry;

public final class TelemetryOuterClass {
  private TelemetryOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TelemetryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:telemetry.Telemetry)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *设备的hostname，为设备在网络中的唯一标识，用户可以配置修改，GPB编码时编码为1。
     * </pre>
     *
     * <code>string node_id_str = 1;</code>
     * @return The nodeIdStr.
     */
    java.lang.String getNodeIdStr();
    /**
     * <pre>
     *设备的hostname，为设备在网络中的唯一标识，用户可以配置修改，GPB编码时编码为1。
     * </pre>
     *
     * <code>string node_id_str = 1;</code>
     * @return The bytes for nodeIdStr.
     */
    com.google.protobuf.ByteString
        getNodeIdStrBytes();

    /**
     * <pre>
     *订阅名称，静态配置订阅时的订阅名称，GPB编码时编码为2。
     * </pre>
     *
     * <code>string subscription_id_str = 2;</code>
     * @return The subscriptionIdStr.
     */
    java.lang.String getSubscriptionIdStr();
    /**
     * <pre>
     *订阅名称，静态配置订阅时的订阅名称，GPB编码时编码为2。
     * </pre>
     *
     * <code>string subscription_id_str = 2;</code>
     * @return The bytes for subscriptionIdStr.
     */
    com.google.protobuf.ByteString
        getSubscriptionIdStrBytes();

    /**
     * <pre>
     *订阅路径，GPB编码时编码为3。
     * </pre>
     *
     * <code>string sensor_path = 3;</code>
     * @return The sensorPath.
     */
    java.lang.String getSensorPath();
    /**
     * <pre>
     *订阅路径，GPB编码时编码为3。
     * </pre>
     *
     * <code>string sensor_path = 3;</code>
     * @return The bytes for sensorPath.
     */
    com.google.protobuf.ByteString
        getSensorPathBytes();

    /**
     * <pre>
     *标识采样轮次，GPB编码时编码为4。
     * </pre>
     *
     * <code>uint64 collection_id = 4;</code>
     * @return The collectionId.
     */
    long getCollectionId();

    /**
     * <pre>
     *标识采样轮次开始时间，GPB编码时编码为5。
     * </pre>
     *
     * <code>uint64 collection_start_time = 5;</code>
     * @return The collectionStartTime.
     */
    long getCollectionStartTime();

    /**
     * <pre>
     *生成本消息的时间戳，GPB编码时编码为6。
     * </pre>
     *
     * <code>uint64 msg_timestamp = 6;</code>
     * @return The msgTimestamp.
     */
    long getMsgTimestamp();

    /**
     * <pre>
     *承载的数据，由TelemetryGPBTable定义，GPB编码时编码为7。
     * </pre>
     *
     * <code>.telemetry.TelemetryGPBTable data_gpb = 7;</code>
     * @return Whether the dataGpb field is set.
     */
    boolean hasDataGpb();
    /**
     * <pre>
     *承载的数据，由TelemetryGPBTable定义，GPB编码时编码为7。
     * </pre>
     *
     * <code>.telemetry.TelemetryGPBTable data_gpb = 7;</code>
     * @return The dataGpb.
     */
    com.telemetry.TelemetryOuterClass.TelemetryGPBTable getDataGpb();
    /**
     * <pre>
     *承载的数据，由TelemetryGPBTable定义，GPB编码时编码为7。
     * </pre>
     *
     * <code>.telemetry.TelemetryGPBTable data_gpb = 7;</code>
     */
    com.telemetry.TelemetryOuterClass.TelemetryGPBTableOrBuilder getDataGpbOrBuilder();

    /**
     * <pre>
     *标识采样轮次结束时间，GPB编码时编码为8。
     * </pre>
     *
     * <code>uint64 collection_end_time = 8;</code>
     * @return The collectionEndTime.
     */
    long getCollectionEndTime();

    /**
     * <pre>
     *采样精度，单位是毫秒，GPB编码时编码为9。
     * </pre>
     *
     * <code>uint32 current_period = 9;</code>
     * @return The currentPeriod.
     */
    int getCurrentPeriod();

    /**
     * <pre>
     *异常描述信息，采样异常时用于上报异常信息，GPB编码时编码为10。
     * </pre>
     *
     * <code>string except_desc = 10;</code>
     * @return The exceptDesc.
     */
    java.lang.String getExceptDesc();
    /**
     * <pre>
     *异常描述信息，采样异常时用于上报异常信息，GPB编码时编码为10。
     * </pre>
     *
     * <code>string except_desc = 10;</code>
     * @return The bytes for exceptDesc.
     */
    com.google.protobuf.ByteString
        getExceptDescBytes();

    /**
     * <pre>
     *产品形态名
     * </pre>
     *
     * <code>string product_name = 11;</code>
     * @return The productName.
     */
    java.lang.String getProductName();
    /**
     * <pre>
     *产品形态名
     * </pre>
     *
     * <code>string product_name = 11;</code>
     * @return The bytes for productName.
     */
    com.google.protobuf.ByteString
        getProductNameBytes();

    /**
     * <pre>
     *数据编码。
     * </pre>
     *
     * <code>.telemetry.Telemetry.Encoding encoding = 12;</code>
     * @return The enum numeric value on the wire for encoding.
     */
    int getEncodingValue();
    /**
     * <pre>
     *数据编码。
     * </pre>
     *
     * <code>.telemetry.Telemetry.Encoding encoding = 12;</code>
     * @return The encoding.
     */
    com.telemetry.TelemetryOuterClass.Telemetry.Encoding getEncoding();
  }
  /**
   * <pre>
   *telemetry消息结构定义。
   * </pre>
   *
   * Protobuf type {@code telemetry.Telemetry}
   */
  public  static final class Telemetry extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:telemetry.Telemetry)
      TelemetryOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Telemetry.newBuilder() to construct.
    private Telemetry(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Telemetry() {
      nodeIdStr_ = "";
      subscriptionIdStr_ = "";
      sensorPath_ = "";
      exceptDesc_ = "";
      productName_ = "";
      encoding_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Telemetry();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Telemetry(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              nodeIdStr_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              subscriptionIdStr_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              sensorPath_ = s;
              break;
            }
            case 32: {

              collectionId_ = input.readUInt64();
              break;
            }
            case 40: {

              collectionStartTime_ = input.readUInt64();
              break;
            }
            case 48: {

              msgTimestamp_ = input.readUInt64();
              break;
            }
            case 58: {
              com.telemetry.TelemetryOuterClass.TelemetryGPBTable.Builder subBuilder = null;
              if (dataGpb_ != null) {
                subBuilder = dataGpb_.toBuilder();
              }
              dataGpb_ = input.readMessage(com.telemetry.TelemetryOuterClass.TelemetryGPBTable.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dataGpb_);
                dataGpb_ = subBuilder.buildPartial();
              }

              break;
            }
            case 64: {

              collectionEndTime_ = input.readUInt64();
              break;
            }
            case 72: {

              currentPeriod_ = input.readUInt32();
              break;
            }
            case 82: {
              java.lang.String s = input.readStringRequireUtf8();

              exceptDesc_ = s;
              break;
            }
            case 90: {
              java.lang.String s = input.readStringRequireUtf8();

              productName_ = s;
              break;
            }
            case 96: {
              int rawValue = input.readEnum();

              encoding_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.telemetry.TelemetryOuterClass.internal_static_telemetry_Telemetry_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.telemetry.TelemetryOuterClass.internal_static_telemetry_Telemetry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.telemetry.TelemetryOuterClass.Telemetry.class, com.telemetry.TelemetryOuterClass.Telemetry.Builder.class);
    }

    /**
     * Protobuf enum {@code telemetry.Telemetry.Encoding}
     */
    public enum Encoding
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>Encoding_GPB = 0;</code>
       */
      Encoding_GPB(0),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>Encoding_GPB = 0;</code>
       */
      public static final int Encoding_GPB_VALUE = 0;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Encoding valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Encoding forNumber(int value) {
        switch (value) {
          case 0: return Encoding_GPB;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Encoding>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Encoding> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Encoding>() {
              public Encoding findValueByNumber(int number) {
                return Encoding.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.telemetry.TelemetryOuterClass.Telemetry.getDescriptor().getEnumTypes().get(0);
      }

      private static final Encoding[] VALUES = values();

      public static Encoding valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Encoding(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:telemetry.Telemetry.Encoding)
    }

    public static final int NODE_ID_STR_FIELD_NUMBER = 1;
    private volatile java.lang.Object nodeIdStr_;
    /**
     * <pre>
     *设备的hostname，为设备在网络中的唯一标识，用户可以配置修改，GPB编码时编码为1。
     * </pre>
     *
     * <code>string node_id_str = 1;</code>
     * @return The nodeIdStr.
     */
    public java.lang.String getNodeIdStr() {
      java.lang.Object ref = nodeIdStr_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        nodeIdStr_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *设备的hostname，为设备在网络中的唯一标识，用户可以配置修改，GPB编码时编码为1。
     * </pre>
     *
     * <code>string node_id_str = 1;</code>
     * @return The bytes for nodeIdStr.
     */
    public com.google.protobuf.ByteString
        getNodeIdStrBytes() {
      java.lang.Object ref = nodeIdStr_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nodeIdStr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SUBSCRIPTION_ID_STR_FIELD_NUMBER = 2;
    private volatile java.lang.Object subscriptionIdStr_;
    /**
     * <pre>
     *订阅名称，静态配置订阅时的订阅名称，GPB编码时编码为2。
     * </pre>
     *
     * <code>string subscription_id_str = 2;</code>
     * @return The subscriptionIdStr.
     */
    public java.lang.String getSubscriptionIdStr() {
      java.lang.Object ref = subscriptionIdStr_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        subscriptionIdStr_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *订阅名称，静态配置订阅时的订阅名称，GPB编码时编码为2。
     * </pre>
     *
     * <code>string subscription_id_str = 2;</code>
     * @return The bytes for subscriptionIdStr.
     */
    public com.google.protobuf.ByteString
        getSubscriptionIdStrBytes() {
      java.lang.Object ref = subscriptionIdStr_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        subscriptionIdStr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SENSOR_PATH_FIELD_NUMBER = 3;
    private volatile java.lang.Object sensorPath_;
    /**
     * <pre>
     *订阅路径，GPB编码时编码为3。
     * </pre>
     *
     * <code>string sensor_path = 3;</code>
     * @return The sensorPath.
     */
    public java.lang.String getSensorPath() {
      java.lang.Object ref = sensorPath_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sensorPath_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *订阅路径，GPB编码时编码为3。
     * </pre>
     *
     * <code>string sensor_path = 3;</code>
     * @return The bytes for sensorPath.
     */
    public com.google.protobuf.ByteString
        getSensorPathBytes() {
      java.lang.Object ref = sensorPath_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sensorPath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COLLECTION_ID_FIELD_NUMBER = 4;
    private long collectionId_;
    /**
     * <pre>
     *标识采样轮次，GPB编码时编码为4。
     * </pre>
     *
     * <code>uint64 collection_id = 4;</code>
     * @return The collectionId.
     */
    public long getCollectionId() {
      return collectionId_;
    }

    public static final int COLLECTION_START_TIME_FIELD_NUMBER = 5;
    private long collectionStartTime_;
    /**
     * <pre>
     *标识采样轮次开始时间，GPB编码时编码为5。
     * </pre>
     *
     * <code>uint64 collection_start_time = 5;</code>
     * @return The collectionStartTime.
     */
    public long getCollectionStartTime() {
      return collectionStartTime_;
    }

    public static final int MSG_TIMESTAMP_FIELD_NUMBER = 6;
    private long msgTimestamp_;
    /**
     * <pre>
     *生成本消息的时间戳，GPB编码时编码为6。
     * </pre>
     *
     * <code>uint64 msg_timestamp = 6;</code>
     * @return The msgTimestamp.
     */
    public long getMsgTimestamp() {
      return msgTimestamp_;
    }

    public static final int DATA_GPB_FIELD_NUMBER = 7;
    private com.telemetry.TelemetryOuterClass.TelemetryGPBTable dataGpb_;
    /**
     * <pre>
     *承载的数据，由TelemetryGPBTable定义，GPB编码时编码为7。
     * </pre>
     *
     * <code>.telemetry.TelemetryGPBTable data_gpb = 7;</code>
     * @return Whether the dataGpb field is set.
     */
    public boolean hasDataGpb() {
      return dataGpb_ != null;
    }
    /**
     * <pre>
     *承载的数据，由TelemetryGPBTable定义，GPB编码时编码为7。
     * </pre>
     *
     * <code>.telemetry.TelemetryGPBTable data_gpb = 7;</code>
     * @return The dataGpb.
     */
    public com.telemetry.TelemetryOuterClass.TelemetryGPBTable getDataGpb() {
      return dataGpb_ == null ? com.telemetry.TelemetryOuterClass.TelemetryGPBTable.getDefaultInstance() : dataGpb_;
    }
    /**
     * <pre>
     *承载的数据，由TelemetryGPBTable定义，GPB编码时编码为7。
     * </pre>
     *
     * <code>.telemetry.TelemetryGPBTable data_gpb = 7;</code>
     */
    public com.telemetry.TelemetryOuterClass.TelemetryGPBTableOrBuilder getDataGpbOrBuilder() {
      return getDataGpb();
    }

    public static final int COLLECTION_END_TIME_FIELD_NUMBER = 8;
    private long collectionEndTime_;
    /**
     * <pre>
     *标识采样轮次结束时间，GPB编码时编码为8。
     * </pre>
     *
     * <code>uint64 collection_end_time = 8;</code>
     * @return The collectionEndTime.
     */
    public long getCollectionEndTime() {
      return collectionEndTime_;
    }

    public static final int CURRENT_PERIOD_FIELD_NUMBER = 9;
    private int currentPeriod_;
    /**
     * <pre>
     *采样精度，单位是毫秒，GPB编码时编码为9。
     * </pre>
     *
     * <code>uint32 current_period = 9;</code>
     * @return The currentPeriod.
     */
    public int getCurrentPeriod() {
      return currentPeriod_;
    }

    public static final int EXCEPT_DESC_FIELD_NUMBER = 10;
    private volatile java.lang.Object exceptDesc_;
    /**
     * <pre>
     *异常描述信息，采样异常时用于上报异常信息，GPB编码时编码为10。
     * </pre>
     *
     * <code>string except_desc = 10;</code>
     * @return The exceptDesc.
     */
    public java.lang.String getExceptDesc() {
      java.lang.Object ref = exceptDesc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        exceptDesc_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *异常描述信息，采样异常时用于上报异常信息，GPB编码时编码为10。
     * </pre>
     *
     * <code>string except_desc = 10;</code>
     * @return The bytes for exceptDesc.
     */
    public com.google.protobuf.ByteString
        getExceptDescBytes() {
      java.lang.Object ref = exceptDesc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        exceptDesc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PRODUCT_NAME_FIELD_NUMBER = 11;
    private volatile java.lang.Object productName_;
    /**
     * <pre>
     *产品形态名
     * </pre>
     *
     * <code>string product_name = 11;</code>
     * @return The productName.
     */
    public java.lang.String getProductName() {
      java.lang.Object ref = productName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        productName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *产品形态名
     * </pre>
     *
     * <code>string product_name = 11;</code>
     * @return The bytes for productName.
     */
    public com.google.protobuf.ByteString
        getProductNameBytes() {
      java.lang.Object ref = productName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        productName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ENCODING_FIELD_NUMBER = 12;
    private int encoding_;
    /**
     * <pre>
     *数据编码。
     * </pre>
     *
     * <code>.telemetry.Telemetry.Encoding encoding = 12;</code>
     * @return The enum numeric value on the wire for encoding.
     */
    public int getEncodingValue() {
      return encoding_;
    }
    /**
     * <pre>
     *数据编码。
     * </pre>
     *
     * <code>.telemetry.Telemetry.Encoding encoding = 12;</code>
     * @return The encoding.
     */
    public com.telemetry.TelemetryOuterClass.Telemetry.Encoding getEncoding() {
      @SuppressWarnings("deprecation")
      com.telemetry.TelemetryOuterClass.Telemetry.Encoding result = com.telemetry.TelemetryOuterClass.Telemetry.Encoding.valueOf(encoding_);
      return result == null ? com.telemetry.TelemetryOuterClass.Telemetry.Encoding.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNodeIdStrBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, nodeIdStr_);
      }
      if (!getSubscriptionIdStrBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, subscriptionIdStr_);
      }
      if (!getSensorPathBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, sensorPath_);
      }
      if (collectionId_ != 0L) {
        output.writeUInt64(4, collectionId_);
      }
      if (collectionStartTime_ != 0L) {
        output.writeUInt64(5, collectionStartTime_);
      }
      if (msgTimestamp_ != 0L) {
        output.writeUInt64(6, msgTimestamp_);
      }
      if (dataGpb_ != null) {
        output.writeMessage(7, getDataGpb());
      }
      if (collectionEndTime_ != 0L) {
        output.writeUInt64(8, collectionEndTime_);
      }
      if (currentPeriod_ != 0) {
        output.writeUInt32(9, currentPeriod_);
      }
      if (!getExceptDescBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, exceptDesc_);
      }
      if (!getProductNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 11, productName_);
      }
      if (encoding_ != com.telemetry.TelemetryOuterClass.Telemetry.Encoding.Encoding_GPB.getNumber()) {
        output.writeEnum(12, encoding_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNodeIdStrBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, nodeIdStr_);
      }
      if (!getSubscriptionIdStrBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, subscriptionIdStr_);
      }
      if (!getSensorPathBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, sensorPath_);
      }
      if (collectionId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, collectionId_);
      }
      if (collectionStartTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, collectionStartTime_);
      }
      if (msgTimestamp_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, msgTimestamp_);
      }
      if (dataGpb_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getDataGpb());
      }
      if (collectionEndTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(8, collectionEndTime_);
      }
      if (currentPeriod_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, currentPeriod_);
      }
      if (!getExceptDescBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, exceptDesc_);
      }
      if (!getProductNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, productName_);
      }
      if (encoding_ != com.telemetry.TelemetryOuterClass.Telemetry.Encoding.Encoding_GPB.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(12, encoding_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.telemetry.TelemetryOuterClass.Telemetry)) {
        return super.equals(obj);
      }
      com.telemetry.TelemetryOuterClass.Telemetry other = (com.telemetry.TelemetryOuterClass.Telemetry) obj;

      if (!getNodeIdStr()
          .equals(other.getNodeIdStr())) return false;
      if (!getSubscriptionIdStr()
          .equals(other.getSubscriptionIdStr())) return false;
      if (!getSensorPath()
          .equals(other.getSensorPath())) return false;
      if (getCollectionId()
          != other.getCollectionId()) return false;
      if (getCollectionStartTime()
          != other.getCollectionStartTime()) return false;
      if (getMsgTimestamp()
          != other.getMsgTimestamp()) return false;
      if (hasDataGpb() != other.hasDataGpb()) return false;
      if (hasDataGpb()) {
        if (!getDataGpb()
            .equals(other.getDataGpb())) return false;
      }
      if (getCollectionEndTime()
          != other.getCollectionEndTime()) return false;
      if (getCurrentPeriod()
          != other.getCurrentPeriod()) return false;
      if (!getExceptDesc()
          .equals(other.getExceptDesc())) return false;
      if (!getProductName()
          .equals(other.getProductName())) return false;
      if (encoding_ != other.encoding_) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NODE_ID_STR_FIELD_NUMBER;
      hash = (53 * hash) + getNodeIdStr().hashCode();
      hash = (37 * hash) + SUBSCRIPTION_ID_STR_FIELD_NUMBER;
      hash = (53 * hash) + getSubscriptionIdStr().hashCode();
      hash = (37 * hash) + SENSOR_PATH_FIELD_NUMBER;
      hash = (53 * hash) + getSensorPath().hashCode();
      hash = (37 * hash) + COLLECTION_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCollectionId());
      hash = (37 * hash) + COLLECTION_START_TIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCollectionStartTime());
      hash = (37 * hash) + MSG_TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMsgTimestamp());
      if (hasDataGpb()) {
        hash = (37 * hash) + DATA_GPB_FIELD_NUMBER;
        hash = (53 * hash) + getDataGpb().hashCode();
      }
      hash = (37 * hash) + COLLECTION_END_TIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCollectionEndTime());
      hash = (37 * hash) + CURRENT_PERIOD_FIELD_NUMBER;
      hash = (53 * hash) + getCurrentPeriod();
      hash = (37 * hash) + EXCEPT_DESC_FIELD_NUMBER;
      hash = (53 * hash) + getExceptDesc().hashCode();
      hash = (37 * hash) + PRODUCT_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getProductName().hashCode();
      hash = (37 * hash) + ENCODING_FIELD_NUMBER;
      hash = (53 * hash) + encoding_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.telemetry.TelemetryOuterClass.Telemetry parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.telemetry.TelemetryOuterClass.Telemetry parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.telemetry.TelemetryOuterClass.Telemetry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.telemetry.TelemetryOuterClass.Telemetry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.telemetry.TelemetryOuterClass.Telemetry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.telemetry.TelemetryOuterClass.Telemetry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.telemetry.TelemetryOuterClass.Telemetry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.telemetry.TelemetryOuterClass.Telemetry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.telemetry.TelemetryOuterClass.Telemetry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.telemetry.TelemetryOuterClass.Telemetry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.telemetry.TelemetryOuterClass.Telemetry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.telemetry.TelemetryOuterClass.Telemetry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.telemetry.TelemetryOuterClass.Telemetry prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *telemetry消息结构定义。
     * </pre>
     *
     * Protobuf type {@code telemetry.Telemetry}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:telemetry.Telemetry)
        com.telemetry.TelemetryOuterClass.TelemetryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.telemetry.TelemetryOuterClass.internal_static_telemetry_Telemetry_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.telemetry.TelemetryOuterClass.internal_static_telemetry_Telemetry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.telemetry.TelemetryOuterClass.Telemetry.class, com.telemetry.TelemetryOuterClass.Telemetry.Builder.class);
      }

      // Construct using com.telemetry.TelemetryOuterClass.Telemetry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        nodeIdStr_ = "";

        subscriptionIdStr_ = "";

        sensorPath_ = "";

        collectionId_ = 0L;

        collectionStartTime_ = 0L;

        msgTimestamp_ = 0L;

        if (dataGpbBuilder_ == null) {
          dataGpb_ = null;
        } else {
          dataGpb_ = null;
          dataGpbBuilder_ = null;
        }
        collectionEndTime_ = 0L;

        currentPeriod_ = 0;

        exceptDesc_ = "";

        productName_ = "";

        encoding_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.telemetry.TelemetryOuterClass.internal_static_telemetry_Telemetry_descriptor;
      }

      @java.lang.Override
      public com.telemetry.TelemetryOuterClass.Telemetry getDefaultInstanceForType() {
        return com.telemetry.TelemetryOuterClass.Telemetry.getDefaultInstance();
      }

      @java.lang.Override
      public com.telemetry.TelemetryOuterClass.Telemetry build() {
        com.telemetry.TelemetryOuterClass.Telemetry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.telemetry.TelemetryOuterClass.Telemetry buildPartial() {
        com.telemetry.TelemetryOuterClass.Telemetry result = new com.telemetry.TelemetryOuterClass.Telemetry(this);
        result.nodeIdStr_ = nodeIdStr_;
        result.subscriptionIdStr_ = subscriptionIdStr_;
        result.sensorPath_ = sensorPath_;
        result.collectionId_ = collectionId_;
        result.collectionStartTime_ = collectionStartTime_;
        result.msgTimestamp_ = msgTimestamp_;
        if (dataGpbBuilder_ == null) {
          result.dataGpb_ = dataGpb_;
        } else {
          result.dataGpb_ = dataGpbBuilder_.build();
        }
        result.collectionEndTime_ = collectionEndTime_;
        result.currentPeriod_ = currentPeriod_;
        result.exceptDesc_ = exceptDesc_;
        result.productName_ = productName_;
        result.encoding_ = encoding_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.telemetry.TelemetryOuterClass.Telemetry) {
          return mergeFrom((com.telemetry.TelemetryOuterClass.Telemetry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.telemetry.TelemetryOuterClass.Telemetry other) {
        if (other == com.telemetry.TelemetryOuterClass.Telemetry.getDefaultInstance()) return this;
        if (!other.getNodeIdStr().isEmpty()) {
          nodeIdStr_ = other.nodeIdStr_;
          onChanged();
        }
        if (!other.getSubscriptionIdStr().isEmpty()) {
          subscriptionIdStr_ = other.subscriptionIdStr_;
          onChanged();
        }
        if (!other.getSensorPath().isEmpty()) {
          sensorPath_ = other.sensorPath_;
          onChanged();
        }
        if (other.getCollectionId() != 0L) {
          setCollectionId(other.getCollectionId());
        }
        if (other.getCollectionStartTime() != 0L) {
          setCollectionStartTime(other.getCollectionStartTime());
        }
        if (other.getMsgTimestamp() != 0L) {
          setMsgTimestamp(other.getMsgTimestamp());
        }
        if (other.hasDataGpb()) {
          mergeDataGpb(other.getDataGpb());
        }
        if (other.getCollectionEndTime() != 0L) {
          setCollectionEndTime(other.getCollectionEndTime());
        }
        if (other.getCurrentPeriod() != 0) {
          setCurrentPeriod(other.getCurrentPeriod());
        }
        if (!other.getExceptDesc().isEmpty()) {
          exceptDesc_ = other.exceptDesc_;
          onChanged();
        }
        if (!other.getProductName().isEmpty()) {
          productName_ = other.productName_;
          onChanged();
        }
        if (other.encoding_ != 0) {
          setEncodingValue(other.getEncodingValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.telemetry.TelemetryOuterClass.Telemetry parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.telemetry.TelemetryOuterClass.Telemetry) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object nodeIdStr_ = "";
      /**
       * <pre>
       *设备的hostname，为设备在网络中的唯一标识，用户可以配置修改，GPB编码时编码为1。
       * </pre>
       *
       * <code>string node_id_str = 1;</code>
       * @return The nodeIdStr.
       */
      public java.lang.String getNodeIdStr() {
        java.lang.Object ref = nodeIdStr_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          nodeIdStr_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *设备的hostname，为设备在网络中的唯一标识，用户可以配置修改，GPB编码时编码为1。
       * </pre>
       *
       * <code>string node_id_str = 1;</code>
       * @return The bytes for nodeIdStr.
       */
      public com.google.protobuf.ByteString
          getNodeIdStrBytes() {
        java.lang.Object ref = nodeIdStr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nodeIdStr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *设备的hostname，为设备在网络中的唯一标识，用户可以配置修改，GPB编码时编码为1。
       * </pre>
       *
       * <code>string node_id_str = 1;</code>
       * @param value The nodeIdStr to set.
       * @return This builder for chaining.
       */
      public Builder setNodeIdStr(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        nodeIdStr_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *设备的hostname，为设备在网络中的唯一标识，用户可以配置修改，GPB编码时编码为1。
       * </pre>
       *
       * <code>string node_id_str = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearNodeIdStr() {
        
        nodeIdStr_ = getDefaultInstance().getNodeIdStr();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *设备的hostname，为设备在网络中的唯一标识，用户可以配置修改，GPB编码时编码为1。
       * </pre>
       *
       * <code>string node_id_str = 1;</code>
       * @param value The bytes for nodeIdStr to set.
       * @return This builder for chaining.
       */
      public Builder setNodeIdStrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        nodeIdStr_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object subscriptionIdStr_ = "";
      /**
       * <pre>
       *订阅名称，静态配置订阅时的订阅名称，GPB编码时编码为2。
       * </pre>
       *
       * <code>string subscription_id_str = 2;</code>
       * @return The subscriptionIdStr.
       */
      public java.lang.String getSubscriptionIdStr() {
        java.lang.Object ref = subscriptionIdStr_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          subscriptionIdStr_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *订阅名称，静态配置订阅时的订阅名称，GPB编码时编码为2。
       * </pre>
       *
       * <code>string subscription_id_str = 2;</code>
       * @return The bytes for subscriptionIdStr.
       */
      public com.google.protobuf.ByteString
          getSubscriptionIdStrBytes() {
        java.lang.Object ref = subscriptionIdStr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          subscriptionIdStr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *订阅名称，静态配置订阅时的订阅名称，GPB编码时编码为2。
       * </pre>
       *
       * <code>string subscription_id_str = 2;</code>
       * @param value The subscriptionIdStr to set.
       * @return This builder for chaining.
       */
      public Builder setSubscriptionIdStr(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        subscriptionIdStr_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *订阅名称，静态配置订阅时的订阅名称，GPB编码时编码为2。
       * </pre>
       *
       * <code>string subscription_id_str = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSubscriptionIdStr() {
        
        subscriptionIdStr_ = getDefaultInstance().getSubscriptionIdStr();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *订阅名称，静态配置订阅时的订阅名称，GPB编码时编码为2。
       * </pre>
       *
       * <code>string subscription_id_str = 2;</code>
       * @param value The bytes for subscriptionIdStr to set.
       * @return This builder for chaining.
       */
      public Builder setSubscriptionIdStrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        subscriptionIdStr_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object sensorPath_ = "";
      /**
       * <pre>
       *订阅路径，GPB编码时编码为3。
       * </pre>
       *
       * <code>string sensor_path = 3;</code>
       * @return The sensorPath.
       */
      public java.lang.String getSensorPath() {
        java.lang.Object ref = sensorPath_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          sensorPath_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *订阅路径，GPB编码时编码为3。
       * </pre>
       *
       * <code>string sensor_path = 3;</code>
       * @return The bytes for sensorPath.
       */
      public com.google.protobuf.ByteString
          getSensorPathBytes() {
        java.lang.Object ref = sensorPath_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sensorPath_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *订阅路径，GPB编码时编码为3。
       * </pre>
       *
       * <code>string sensor_path = 3;</code>
       * @param value The sensorPath to set.
       * @return This builder for chaining.
       */
      public Builder setSensorPath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sensorPath_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *订阅路径，GPB编码时编码为3。
       * </pre>
       *
       * <code>string sensor_path = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSensorPath() {
        
        sensorPath_ = getDefaultInstance().getSensorPath();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *订阅路径，GPB编码时编码为3。
       * </pre>
       *
       * <code>string sensor_path = 3;</code>
       * @param value The bytes for sensorPath to set.
       * @return This builder for chaining.
       */
      public Builder setSensorPathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sensorPath_ = value;
        onChanged();
        return this;
      }

      private long collectionId_ ;
      /**
       * <pre>
       *标识采样轮次，GPB编码时编码为4。
       * </pre>
       *
       * <code>uint64 collection_id = 4;</code>
       * @return The collectionId.
       */
      public long getCollectionId() {
        return collectionId_;
      }
      /**
       * <pre>
       *标识采样轮次，GPB编码时编码为4。
       * </pre>
       *
       * <code>uint64 collection_id = 4;</code>
       * @param value The collectionId to set.
       * @return This builder for chaining.
       */
      public Builder setCollectionId(long value) {
        
        collectionId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *标识采样轮次，GPB编码时编码为4。
       * </pre>
       *
       * <code>uint64 collection_id = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearCollectionId() {
        
        collectionId_ = 0L;
        onChanged();
        return this;
      }

      private long collectionStartTime_ ;
      /**
       * <pre>
       *标识采样轮次开始时间，GPB编码时编码为5。
       * </pre>
       *
       * <code>uint64 collection_start_time = 5;</code>
       * @return The collectionStartTime.
       */
      public long getCollectionStartTime() {
        return collectionStartTime_;
      }
      /**
       * <pre>
       *标识采样轮次开始时间，GPB编码时编码为5。
       * </pre>
       *
       * <code>uint64 collection_start_time = 5;</code>
       * @param value The collectionStartTime to set.
       * @return This builder for chaining.
       */
      public Builder setCollectionStartTime(long value) {
        
        collectionStartTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *标识采样轮次开始时间，GPB编码时编码为5。
       * </pre>
       *
       * <code>uint64 collection_start_time = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearCollectionStartTime() {
        
        collectionStartTime_ = 0L;
        onChanged();
        return this;
      }

      private long msgTimestamp_ ;
      /**
       * <pre>
       *生成本消息的时间戳，GPB编码时编码为6。
       * </pre>
       *
       * <code>uint64 msg_timestamp = 6;</code>
       * @return The msgTimestamp.
       */
      public long getMsgTimestamp() {
        return msgTimestamp_;
      }
      /**
       * <pre>
       *生成本消息的时间戳，GPB编码时编码为6。
       * </pre>
       *
       * <code>uint64 msg_timestamp = 6;</code>
       * @param value The msgTimestamp to set.
       * @return This builder for chaining.
       */
      public Builder setMsgTimestamp(long value) {
        
        msgTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *生成本消息的时间戳，GPB编码时编码为6。
       * </pre>
       *
       * <code>uint64 msg_timestamp = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearMsgTimestamp() {
        
        msgTimestamp_ = 0L;
        onChanged();
        return this;
      }

      private com.telemetry.TelemetryOuterClass.TelemetryGPBTable dataGpb_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.telemetry.TelemetryOuterClass.TelemetryGPBTable, com.telemetry.TelemetryOuterClass.TelemetryGPBTable.Builder, com.telemetry.TelemetryOuterClass.TelemetryGPBTableOrBuilder> dataGpbBuilder_;
      /**
       * <pre>
       *承载的数据，由TelemetryGPBTable定义，GPB编码时编码为7。
       * </pre>
       *
       * <code>.telemetry.TelemetryGPBTable data_gpb = 7;</code>
       * @return Whether the dataGpb field is set.
       */
      public boolean hasDataGpb() {
        return dataGpbBuilder_ != null || dataGpb_ != null;
      }
      /**
       * <pre>
       *承载的数据，由TelemetryGPBTable定义，GPB编码时编码为7。
       * </pre>
       *
       * <code>.telemetry.TelemetryGPBTable data_gpb = 7;</code>
       * @return The dataGpb.
       */
      public com.telemetry.TelemetryOuterClass.TelemetryGPBTable getDataGpb() {
        if (dataGpbBuilder_ == null) {
          return dataGpb_ == null ? com.telemetry.TelemetryOuterClass.TelemetryGPBTable.getDefaultInstance() : dataGpb_;
        } else {
          return dataGpbBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *承载的数据，由TelemetryGPBTable定义，GPB编码时编码为7。
       * </pre>
       *
       * <code>.telemetry.TelemetryGPBTable data_gpb = 7;</code>
       */
      public Builder setDataGpb(com.telemetry.TelemetryOuterClass.TelemetryGPBTable value) {
        if (dataGpbBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dataGpb_ = value;
          onChanged();
        } else {
          dataGpbBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *承载的数据，由TelemetryGPBTable定义，GPB编码时编码为7。
       * </pre>
       *
       * <code>.telemetry.TelemetryGPBTable data_gpb = 7;</code>
       */
      public Builder setDataGpb(
          com.telemetry.TelemetryOuterClass.TelemetryGPBTable.Builder builderForValue) {
        if (dataGpbBuilder_ == null) {
          dataGpb_ = builderForValue.build();
          onChanged();
        } else {
          dataGpbBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *承载的数据，由TelemetryGPBTable定义，GPB编码时编码为7。
       * </pre>
       *
       * <code>.telemetry.TelemetryGPBTable data_gpb = 7;</code>
       */
      public Builder mergeDataGpb(com.telemetry.TelemetryOuterClass.TelemetryGPBTable value) {
        if (dataGpbBuilder_ == null) {
          if (dataGpb_ != null) {
            dataGpb_ =
              com.telemetry.TelemetryOuterClass.TelemetryGPBTable.newBuilder(dataGpb_).mergeFrom(value).buildPartial();
          } else {
            dataGpb_ = value;
          }
          onChanged();
        } else {
          dataGpbBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *承载的数据，由TelemetryGPBTable定义，GPB编码时编码为7。
       * </pre>
       *
       * <code>.telemetry.TelemetryGPBTable data_gpb = 7;</code>
       */
      public Builder clearDataGpb() {
        if (dataGpbBuilder_ == null) {
          dataGpb_ = null;
          onChanged();
        } else {
          dataGpb_ = null;
          dataGpbBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *承载的数据，由TelemetryGPBTable定义，GPB编码时编码为7。
       * </pre>
       *
       * <code>.telemetry.TelemetryGPBTable data_gpb = 7;</code>
       */
      public com.telemetry.TelemetryOuterClass.TelemetryGPBTable.Builder getDataGpbBuilder() {
        
        onChanged();
        return getDataGpbFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *承载的数据，由TelemetryGPBTable定义，GPB编码时编码为7。
       * </pre>
       *
       * <code>.telemetry.TelemetryGPBTable data_gpb = 7;</code>
       */
      public com.telemetry.TelemetryOuterClass.TelemetryGPBTableOrBuilder getDataGpbOrBuilder() {
        if (dataGpbBuilder_ != null) {
          return dataGpbBuilder_.getMessageOrBuilder();
        } else {
          return dataGpb_ == null ?
              com.telemetry.TelemetryOuterClass.TelemetryGPBTable.getDefaultInstance() : dataGpb_;
        }
      }
      /**
       * <pre>
       *承载的数据，由TelemetryGPBTable定义，GPB编码时编码为7。
       * </pre>
       *
       * <code>.telemetry.TelemetryGPBTable data_gpb = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.telemetry.TelemetryOuterClass.TelemetryGPBTable, com.telemetry.TelemetryOuterClass.TelemetryGPBTable.Builder, com.telemetry.TelemetryOuterClass.TelemetryGPBTableOrBuilder> 
          getDataGpbFieldBuilder() {
        if (dataGpbBuilder_ == null) {
          dataGpbBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.telemetry.TelemetryOuterClass.TelemetryGPBTable, com.telemetry.TelemetryOuterClass.TelemetryGPBTable.Builder, com.telemetry.TelemetryOuterClass.TelemetryGPBTableOrBuilder>(
                  getDataGpb(),
                  getParentForChildren(),
                  isClean());
          dataGpb_ = null;
        }
        return dataGpbBuilder_;
      }

      private long collectionEndTime_ ;
      /**
       * <pre>
       *标识采样轮次结束时间，GPB编码时编码为8。
       * </pre>
       *
       * <code>uint64 collection_end_time = 8;</code>
       * @return The collectionEndTime.
       */
      public long getCollectionEndTime() {
        return collectionEndTime_;
      }
      /**
       * <pre>
       *标识采样轮次结束时间，GPB编码时编码为8。
       * </pre>
       *
       * <code>uint64 collection_end_time = 8;</code>
       * @param value The collectionEndTime to set.
       * @return This builder for chaining.
       */
      public Builder setCollectionEndTime(long value) {
        
        collectionEndTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *标识采样轮次结束时间，GPB编码时编码为8。
       * </pre>
       *
       * <code>uint64 collection_end_time = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearCollectionEndTime() {
        
        collectionEndTime_ = 0L;
        onChanged();
        return this;
      }

      private int currentPeriod_ ;
      /**
       * <pre>
       *采样精度，单位是毫秒，GPB编码时编码为9。
       * </pre>
       *
       * <code>uint32 current_period = 9;</code>
       * @return The currentPeriod.
       */
      public int getCurrentPeriod() {
        return currentPeriod_;
      }
      /**
       * <pre>
       *采样精度，单位是毫秒，GPB编码时编码为9。
       * </pre>
       *
       * <code>uint32 current_period = 9;</code>
       * @param value The currentPeriod to set.
       * @return This builder for chaining.
       */
      public Builder setCurrentPeriod(int value) {
        
        currentPeriod_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *采样精度，单位是毫秒，GPB编码时编码为9。
       * </pre>
       *
       * <code>uint32 current_period = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurrentPeriod() {
        
        currentPeriod_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object exceptDesc_ = "";
      /**
       * <pre>
       *异常描述信息，采样异常时用于上报异常信息，GPB编码时编码为10。
       * </pre>
       *
       * <code>string except_desc = 10;</code>
       * @return The exceptDesc.
       */
      public java.lang.String getExceptDesc() {
        java.lang.Object ref = exceptDesc_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          exceptDesc_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *异常描述信息，采样异常时用于上报异常信息，GPB编码时编码为10。
       * </pre>
       *
       * <code>string except_desc = 10;</code>
       * @return The bytes for exceptDesc.
       */
      public com.google.protobuf.ByteString
          getExceptDescBytes() {
        java.lang.Object ref = exceptDesc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          exceptDesc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *异常描述信息，采样异常时用于上报异常信息，GPB编码时编码为10。
       * </pre>
       *
       * <code>string except_desc = 10;</code>
       * @param value The exceptDesc to set.
       * @return This builder for chaining.
       */
      public Builder setExceptDesc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        exceptDesc_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *异常描述信息，采样异常时用于上报异常信息，GPB编码时编码为10。
       * </pre>
       *
       * <code>string except_desc = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearExceptDesc() {
        
        exceptDesc_ = getDefaultInstance().getExceptDesc();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *异常描述信息，采样异常时用于上报异常信息，GPB编码时编码为10。
       * </pre>
       *
       * <code>string except_desc = 10;</code>
       * @param value The bytes for exceptDesc to set.
       * @return This builder for chaining.
       */
      public Builder setExceptDescBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        exceptDesc_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object productName_ = "";
      /**
       * <pre>
       *产品形态名
       * </pre>
       *
       * <code>string product_name = 11;</code>
       * @return The productName.
       */
      public java.lang.String getProductName() {
        java.lang.Object ref = productName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          productName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *产品形态名
       * </pre>
       *
       * <code>string product_name = 11;</code>
       * @return The bytes for productName.
       */
      public com.google.protobuf.ByteString
          getProductNameBytes() {
        java.lang.Object ref = productName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          productName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *产品形态名
       * </pre>
       *
       * <code>string product_name = 11;</code>
       * @param value The productName to set.
       * @return This builder for chaining.
       */
      public Builder setProductName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        productName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *产品形态名
       * </pre>
       *
       * <code>string product_name = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearProductName() {
        
        productName_ = getDefaultInstance().getProductName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *产品形态名
       * </pre>
       *
       * <code>string product_name = 11;</code>
       * @param value The bytes for productName to set.
       * @return This builder for chaining.
       */
      public Builder setProductNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        productName_ = value;
        onChanged();
        return this;
      }

      private int encoding_ = 0;
      /**
       * <pre>
       *数据编码。
       * </pre>
       *
       * <code>.telemetry.Telemetry.Encoding encoding = 12;</code>
       * @return The enum numeric value on the wire for encoding.
       */
      public int getEncodingValue() {
        return encoding_;
      }
      /**
       * <pre>
       *数据编码。
       * </pre>
       *
       * <code>.telemetry.Telemetry.Encoding encoding = 12;</code>
       * @param value The enum numeric value on the wire for encoding to set.
       * @return This builder for chaining.
       */
      public Builder setEncodingValue(int value) {
        encoding_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *数据编码。
       * </pre>
       *
       * <code>.telemetry.Telemetry.Encoding encoding = 12;</code>
       * @return The encoding.
       */
      public com.telemetry.TelemetryOuterClass.Telemetry.Encoding getEncoding() {
        @SuppressWarnings("deprecation")
        com.telemetry.TelemetryOuterClass.Telemetry.Encoding result = com.telemetry.TelemetryOuterClass.Telemetry.Encoding.valueOf(encoding_);
        return result == null ? com.telemetry.TelemetryOuterClass.Telemetry.Encoding.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *数据编码。
       * </pre>
       *
       * <code>.telemetry.Telemetry.Encoding encoding = 12;</code>
       * @param value The encoding to set.
       * @return This builder for chaining.
       */
      public Builder setEncoding(com.telemetry.TelemetryOuterClass.Telemetry.Encoding value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        encoding_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *数据编码。
       * </pre>
       *
       * <code>.telemetry.Telemetry.Encoding encoding = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearEncoding() {
        
        encoding_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:telemetry.Telemetry)
    }

    // @@protoc_insertion_point(class_scope:telemetry.Telemetry)
    private static final com.telemetry.TelemetryOuterClass.Telemetry DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.telemetry.TelemetryOuterClass.Telemetry();
    }

    public static com.telemetry.TelemetryOuterClass.Telemetry getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Telemetry>
        PARSER = new com.google.protobuf.AbstractParser<Telemetry>() {
      @java.lang.Override
      public Telemetry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Telemetry(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Telemetry> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Telemetry> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.telemetry.TelemetryOuterClass.Telemetry getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TelemetryGPBTableOrBuilder extends
      // @@protoc_insertion_point(interface_extends:telemetry.TelemetryGPBTable)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *数组定义，标识数据是TelemetryRowGPB结构的重复，GPB编码时编码为1。
     * </pre>
     *
     * <code>repeated .telemetry.TelemetryRowGPB row = 1;</code>
     */
    java.util.List<com.telemetry.TelemetryOuterClass.TelemetryRowGPB> 
        getRowList();
    /**
     * <pre>
     *数组定义，标识数据是TelemetryRowGPB结构的重复，GPB编码时编码为1。
     * </pre>
     *
     * <code>repeated .telemetry.TelemetryRowGPB row = 1;</code>
     */
    com.telemetry.TelemetryOuterClass.TelemetryRowGPB getRow(int index);
    /**
     * <pre>
     *数组定义，标识数据是TelemetryRowGPB结构的重复，GPB编码时编码为1。
     * </pre>
     *
     * <code>repeated .telemetry.TelemetryRowGPB row = 1;</code>
     */
    int getRowCount();
    /**
     * <pre>
     *数组定义，标识数据是TelemetryRowGPB结构的重复，GPB编码时编码为1。
     * </pre>
     *
     * <code>repeated .telemetry.TelemetryRowGPB row = 1;</code>
     */
    java.util.List<? extends com.telemetry.TelemetryOuterClass.TelemetryRowGPBOrBuilder> 
        getRowOrBuilderList();
    /**
     * <pre>
     *数组定义，标识数据是TelemetryRowGPB结构的重复，GPB编码时编码为1。
     * </pre>
     *
     * <code>repeated .telemetry.TelemetryRowGPB row = 1;</code>
     */
    com.telemetry.TelemetryOuterClass.TelemetryRowGPBOrBuilder getRowOrBuilder(
        int index);
  }
  /**
   * <pre>
   *TelemetryGPBTable消息结构定义。
   * </pre>
   *
   * Protobuf type {@code telemetry.TelemetryGPBTable}
   */
  public  static final class TelemetryGPBTable extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:telemetry.TelemetryGPBTable)
      TelemetryGPBTableOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TelemetryGPBTable.newBuilder() to construct.
    private TelemetryGPBTable(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TelemetryGPBTable() {
      row_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TelemetryGPBTable();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TelemetryGPBTable(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                row_ = new java.util.ArrayList<com.telemetry.TelemetryOuterClass.TelemetryRowGPB>();
                mutable_bitField0_ |= 0x00000001;
              }
              row_.add(
                  input.readMessage(com.telemetry.TelemetryOuterClass.TelemetryRowGPB.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          row_ = java.util.Collections.unmodifiableList(row_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.telemetry.TelemetryOuterClass.internal_static_telemetry_TelemetryGPBTable_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.telemetry.TelemetryOuterClass.internal_static_telemetry_TelemetryGPBTable_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.telemetry.TelemetryOuterClass.TelemetryGPBTable.class, com.telemetry.TelemetryOuterClass.TelemetryGPBTable.Builder.class);
    }

    public static final int ROW_FIELD_NUMBER = 1;
    private java.util.List<com.telemetry.TelemetryOuterClass.TelemetryRowGPB> row_;
    /**
     * <pre>
     *数组定义，标识数据是TelemetryRowGPB结构的重复，GPB编码时编码为1。
     * </pre>
     *
     * <code>repeated .telemetry.TelemetryRowGPB row = 1;</code>
     */
    public java.util.List<com.telemetry.TelemetryOuterClass.TelemetryRowGPB> getRowList() {
      return row_;
    }
    /**
     * <pre>
     *数组定义，标识数据是TelemetryRowGPB结构的重复，GPB编码时编码为1。
     * </pre>
     *
     * <code>repeated .telemetry.TelemetryRowGPB row = 1;</code>
     */
    public java.util.List<? extends com.telemetry.TelemetryOuterClass.TelemetryRowGPBOrBuilder> 
        getRowOrBuilderList() {
      return row_;
    }
    /**
     * <pre>
     *数组定义，标识数据是TelemetryRowGPB结构的重复，GPB编码时编码为1。
     * </pre>
     *
     * <code>repeated .telemetry.TelemetryRowGPB row = 1;</code>
     */
    public int getRowCount() {
      return row_.size();
    }
    /**
     * <pre>
     *数组定义，标识数据是TelemetryRowGPB结构的重复，GPB编码时编码为1。
     * </pre>
     *
     * <code>repeated .telemetry.TelemetryRowGPB row = 1;</code>
     */
    public com.telemetry.TelemetryOuterClass.TelemetryRowGPB getRow(int index) {
      return row_.get(index);
    }
    /**
     * <pre>
     *数组定义，标识数据是TelemetryRowGPB结构的重复，GPB编码时编码为1。
     * </pre>
     *
     * <code>repeated .telemetry.TelemetryRowGPB row = 1;</code>
     */
    public com.telemetry.TelemetryOuterClass.TelemetryRowGPBOrBuilder getRowOrBuilder(
        int index) {
      return row_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < row_.size(); i++) {
        output.writeMessage(1, row_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < row_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, row_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.telemetry.TelemetryOuterClass.TelemetryGPBTable)) {
        return super.equals(obj);
      }
      com.telemetry.TelemetryOuterClass.TelemetryGPBTable other = (com.telemetry.TelemetryOuterClass.TelemetryGPBTable) obj;

      if (!getRowList()
          .equals(other.getRowList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getRowCount() > 0) {
        hash = (37 * hash) + ROW_FIELD_NUMBER;
        hash = (53 * hash) + getRowList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.telemetry.TelemetryOuterClass.TelemetryGPBTable parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.telemetry.TelemetryOuterClass.TelemetryGPBTable parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.telemetry.TelemetryOuterClass.TelemetryGPBTable parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.telemetry.TelemetryOuterClass.TelemetryGPBTable parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.telemetry.TelemetryOuterClass.TelemetryGPBTable parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.telemetry.TelemetryOuterClass.TelemetryGPBTable parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.telemetry.TelemetryOuterClass.TelemetryGPBTable parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.telemetry.TelemetryOuterClass.TelemetryGPBTable parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.telemetry.TelemetryOuterClass.TelemetryGPBTable parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.telemetry.TelemetryOuterClass.TelemetryGPBTable parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.telemetry.TelemetryOuterClass.TelemetryGPBTable parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.telemetry.TelemetryOuterClass.TelemetryGPBTable parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.telemetry.TelemetryOuterClass.TelemetryGPBTable prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *TelemetryGPBTable消息结构定义。
     * </pre>
     *
     * Protobuf type {@code telemetry.TelemetryGPBTable}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:telemetry.TelemetryGPBTable)
        com.telemetry.TelemetryOuterClass.TelemetryGPBTableOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.telemetry.TelemetryOuterClass.internal_static_telemetry_TelemetryGPBTable_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.telemetry.TelemetryOuterClass.internal_static_telemetry_TelemetryGPBTable_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.telemetry.TelemetryOuterClass.TelemetryGPBTable.class, com.telemetry.TelemetryOuterClass.TelemetryGPBTable.Builder.class);
      }

      // Construct using com.telemetry.TelemetryOuterClass.TelemetryGPBTable.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRowFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          rowBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.telemetry.TelemetryOuterClass.internal_static_telemetry_TelemetryGPBTable_descriptor;
      }

      @java.lang.Override
      public com.telemetry.TelemetryOuterClass.TelemetryGPBTable getDefaultInstanceForType() {
        return com.telemetry.TelemetryOuterClass.TelemetryGPBTable.getDefaultInstance();
      }

      @java.lang.Override
      public com.telemetry.TelemetryOuterClass.TelemetryGPBTable build() {
        com.telemetry.TelemetryOuterClass.TelemetryGPBTable result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.telemetry.TelemetryOuterClass.TelemetryGPBTable buildPartial() {
        com.telemetry.TelemetryOuterClass.TelemetryGPBTable result = new com.telemetry.TelemetryOuterClass.TelemetryGPBTable(this);
        int from_bitField0_ = bitField0_;
        if (rowBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            row_ = java.util.Collections.unmodifiableList(row_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.row_ = row_;
        } else {
          result.row_ = rowBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.telemetry.TelemetryOuterClass.TelemetryGPBTable) {
          return mergeFrom((com.telemetry.TelemetryOuterClass.TelemetryGPBTable)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.telemetry.TelemetryOuterClass.TelemetryGPBTable other) {
        if (other == com.telemetry.TelemetryOuterClass.TelemetryGPBTable.getDefaultInstance()) return this;
        if (rowBuilder_ == null) {
          if (!other.row_.isEmpty()) {
            if (row_.isEmpty()) {
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRowIsMutable();
              row_.addAll(other.row_);
            }
            onChanged();
          }
        } else {
          if (!other.row_.isEmpty()) {
            if (rowBuilder_.isEmpty()) {
              rowBuilder_.dispose();
              rowBuilder_ = null;
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000001);
              rowBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRowFieldBuilder() : null;
            } else {
              rowBuilder_.addAllMessages(other.row_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.telemetry.TelemetryOuterClass.TelemetryGPBTable parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.telemetry.TelemetryOuterClass.TelemetryGPBTable) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.telemetry.TelemetryOuterClass.TelemetryRowGPB> row_ =
        java.util.Collections.emptyList();
      private void ensureRowIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          row_ = new java.util.ArrayList<com.telemetry.TelemetryOuterClass.TelemetryRowGPB>(row_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.telemetry.TelemetryOuterClass.TelemetryRowGPB, com.telemetry.TelemetryOuterClass.TelemetryRowGPB.Builder, com.telemetry.TelemetryOuterClass.TelemetryRowGPBOrBuilder> rowBuilder_;

      /**
       * <pre>
       *数组定义，标识数据是TelemetryRowGPB结构的重复，GPB编码时编码为1。
       * </pre>
       *
       * <code>repeated .telemetry.TelemetryRowGPB row = 1;</code>
       */
      public java.util.List<com.telemetry.TelemetryOuterClass.TelemetryRowGPB> getRowList() {
        if (rowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(row_);
        } else {
          return rowBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *数组定义，标识数据是TelemetryRowGPB结构的重复，GPB编码时编码为1。
       * </pre>
       *
       * <code>repeated .telemetry.TelemetryRowGPB row = 1;</code>
       */
      public int getRowCount() {
        if (rowBuilder_ == null) {
          return row_.size();
        } else {
          return rowBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *数组定义，标识数据是TelemetryRowGPB结构的重复，GPB编码时编码为1。
       * </pre>
       *
       * <code>repeated .telemetry.TelemetryRowGPB row = 1;</code>
       */
      public com.telemetry.TelemetryOuterClass.TelemetryRowGPB getRow(int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);
        } else {
          return rowBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *数组定义，标识数据是TelemetryRowGPB结构的重复，GPB编码时编码为1。
       * </pre>
       *
       * <code>repeated .telemetry.TelemetryRowGPB row = 1;</code>
       */
      public Builder setRow(
          int index, com.telemetry.TelemetryOuterClass.TelemetryRowGPB value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.set(index, value);
          onChanged();
        } else {
          rowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *数组定义，标识数据是TelemetryRowGPB结构的重复，GPB编码时编码为1。
       * </pre>
       *
       * <code>repeated .telemetry.TelemetryRowGPB row = 1;</code>
       */
      public Builder setRow(
          int index, com.telemetry.TelemetryOuterClass.TelemetryRowGPB.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *数组定义，标识数据是TelemetryRowGPB结构的重复，GPB编码时编码为1。
       * </pre>
       *
       * <code>repeated .telemetry.TelemetryRowGPB row = 1;</code>
       */
      public Builder addRow(com.telemetry.TelemetryOuterClass.TelemetryRowGPB value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(value);
          onChanged();
        } else {
          rowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *数组定义，标识数据是TelemetryRowGPB结构的重复，GPB编码时编码为1。
       * </pre>
       *
       * <code>repeated .telemetry.TelemetryRowGPB row = 1;</code>
       */
      public Builder addRow(
          int index, com.telemetry.TelemetryOuterClass.TelemetryRowGPB value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(index, value);
          onChanged();
        } else {
          rowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *数组定义，标识数据是TelemetryRowGPB结构的重复，GPB编码时编码为1。
       * </pre>
       *
       * <code>repeated .telemetry.TelemetryRowGPB row = 1;</code>
       */
      public Builder addRow(
          com.telemetry.TelemetryOuterClass.TelemetryRowGPB.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *数组定义，标识数据是TelemetryRowGPB结构的重复，GPB编码时编码为1。
       * </pre>
       *
       * <code>repeated .telemetry.TelemetryRowGPB row = 1;</code>
       */
      public Builder addRow(
          int index, com.telemetry.TelemetryOuterClass.TelemetryRowGPB.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *数组定义，标识数据是TelemetryRowGPB结构的重复，GPB编码时编码为1。
       * </pre>
       *
       * <code>repeated .telemetry.TelemetryRowGPB row = 1;</code>
       */
      public Builder addAllRow(
          java.lang.Iterable<? extends com.telemetry.TelemetryOuterClass.TelemetryRowGPB> values) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, row_);
          onChanged();
        } else {
          rowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *数组定义，标识数据是TelemetryRowGPB结构的重复，GPB编码时编码为1。
       * </pre>
       *
       * <code>repeated .telemetry.TelemetryRowGPB row = 1;</code>
       */
      public Builder clearRow() {
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          rowBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *数组定义，标识数据是TelemetryRowGPB结构的重复，GPB编码时编码为1。
       * </pre>
       *
       * <code>repeated .telemetry.TelemetryRowGPB row = 1;</code>
       */
      public Builder removeRow(int index) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.remove(index);
          onChanged();
        } else {
          rowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *数组定义，标识数据是TelemetryRowGPB结构的重复，GPB编码时编码为1。
       * </pre>
       *
       * <code>repeated .telemetry.TelemetryRowGPB row = 1;</code>
       */
      public com.telemetry.TelemetryOuterClass.TelemetryRowGPB.Builder getRowBuilder(
          int index) {
        return getRowFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *数组定义，标识数据是TelemetryRowGPB结构的重复，GPB编码时编码为1。
       * </pre>
       *
       * <code>repeated .telemetry.TelemetryRowGPB row = 1;</code>
       */
      public com.telemetry.TelemetryOuterClass.TelemetryRowGPBOrBuilder getRowOrBuilder(
          int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);  } else {
          return rowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *数组定义，标识数据是TelemetryRowGPB结构的重复，GPB编码时编码为1。
       * </pre>
       *
       * <code>repeated .telemetry.TelemetryRowGPB row = 1;</code>
       */
      public java.util.List<? extends com.telemetry.TelemetryOuterClass.TelemetryRowGPBOrBuilder> 
           getRowOrBuilderList() {
        if (rowBuilder_ != null) {
          return rowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(row_);
        }
      }
      /**
       * <pre>
       *数组定义，标识数据是TelemetryRowGPB结构的重复，GPB编码时编码为1。
       * </pre>
       *
       * <code>repeated .telemetry.TelemetryRowGPB row = 1;</code>
       */
      public com.telemetry.TelemetryOuterClass.TelemetryRowGPB.Builder addRowBuilder() {
        return getRowFieldBuilder().addBuilder(
            com.telemetry.TelemetryOuterClass.TelemetryRowGPB.getDefaultInstance());
      }
      /**
       * <pre>
       *数组定义，标识数据是TelemetryRowGPB结构的重复，GPB编码时编码为1。
       * </pre>
       *
       * <code>repeated .telemetry.TelemetryRowGPB row = 1;</code>
       */
      public com.telemetry.TelemetryOuterClass.TelemetryRowGPB.Builder addRowBuilder(
          int index) {
        return getRowFieldBuilder().addBuilder(
            index, com.telemetry.TelemetryOuterClass.TelemetryRowGPB.getDefaultInstance());
      }
      /**
       * <pre>
       *数组定义，标识数据是TelemetryRowGPB结构的重复，GPB编码时编码为1。
       * </pre>
       *
       * <code>repeated .telemetry.TelemetryRowGPB row = 1;</code>
       */
      public java.util.List<com.telemetry.TelemetryOuterClass.TelemetryRowGPB.Builder> 
           getRowBuilderList() {
        return getRowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.telemetry.TelemetryOuterClass.TelemetryRowGPB, com.telemetry.TelemetryOuterClass.TelemetryRowGPB.Builder, com.telemetry.TelemetryOuterClass.TelemetryRowGPBOrBuilder> 
          getRowFieldBuilder() {
        if (rowBuilder_ == null) {
          rowBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.telemetry.TelemetryOuterClass.TelemetryRowGPB, com.telemetry.TelemetryOuterClass.TelemetryRowGPB.Builder, com.telemetry.TelemetryOuterClass.TelemetryRowGPBOrBuilder>(
                  row_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          row_ = null;
        }
        return rowBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:telemetry.TelemetryGPBTable)
    }

    // @@protoc_insertion_point(class_scope:telemetry.TelemetryGPBTable)
    private static final com.telemetry.TelemetryOuterClass.TelemetryGPBTable DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.telemetry.TelemetryOuterClass.TelemetryGPBTable();
    }

    public static com.telemetry.TelemetryOuterClass.TelemetryGPBTable getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TelemetryGPBTable>
        PARSER = new com.google.protobuf.AbstractParser<TelemetryGPBTable>() {
      @java.lang.Override
      public TelemetryGPBTable parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TelemetryGPBTable(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TelemetryGPBTable> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TelemetryGPBTable> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.telemetry.TelemetryOuterClass.TelemetryGPBTable getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TelemetryRowGPBOrBuilder extends
      // @@protoc_insertion_point(interface_extends:telemetry.TelemetryRowGPB)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *采样当前实例的时间戳，GPB编码时编码为1。
     * </pre>
     *
     * <code>uint64 timestamp = 1;</code>
     * @return The timestamp.
     */
    long getTimestamp();

    /**
     * <pre>
     *承载的采样实例数据，GPB编码时编码为11，需要结合sensor_path字段，才可以判断此处会以哪个proto文件编码。
     * </pre>
     *
     * <code>bytes content = 11;</code>
     * @return The content.
     */
    com.google.protobuf.ByteString getContent();
  }
  /**
   * Protobuf type {@code telemetry.TelemetryRowGPB}
   */
  public  static final class TelemetryRowGPB extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:telemetry.TelemetryRowGPB)
      TelemetryRowGPBOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TelemetryRowGPB.newBuilder() to construct.
    private TelemetryRowGPB(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TelemetryRowGPB() {
      content_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TelemetryRowGPB();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TelemetryRowGPB(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              timestamp_ = input.readUInt64();
              break;
            }
            case 90: {

              content_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.telemetry.TelemetryOuterClass.internal_static_telemetry_TelemetryRowGPB_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.telemetry.TelemetryOuterClass.internal_static_telemetry_TelemetryRowGPB_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.telemetry.TelemetryOuterClass.TelemetryRowGPB.class, com.telemetry.TelemetryOuterClass.TelemetryRowGPB.Builder.class);
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private long timestamp_;
    /**
     * <pre>
     *采样当前实例的时间戳，GPB编码时编码为1。
     * </pre>
     *
     * <code>uint64 timestamp = 1;</code>
     * @return The timestamp.
     */
    public long getTimestamp() {
      return timestamp_;
    }

    public static final int CONTENT_FIELD_NUMBER = 11;
    private com.google.protobuf.ByteString content_;
    /**
     * <pre>
     *承载的采样实例数据，GPB编码时编码为11，需要结合sensor_path字段，才可以判断此处会以哪个proto文件编码。
     * </pre>
     *
     * <code>bytes content = 11;</code>
     * @return The content.
     */
    public com.google.protobuf.ByteString getContent() {
      return content_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (timestamp_ != 0L) {
        output.writeUInt64(1, timestamp_);
      }
      if (!content_.isEmpty()) {
        output.writeBytes(11, content_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (timestamp_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, timestamp_);
      }
      if (!content_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, content_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.telemetry.TelemetryOuterClass.TelemetryRowGPB)) {
        return super.equals(obj);
      }
      com.telemetry.TelemetryOuterClass.TelemetryRowGPB other = (com.telemetry.TelemetryOuterClass.TelemetryRowGPB) obj;

      if (getTimestamp()
          != other.getTimestamp()) return false;
      if (!getContent()
          .equals(other.getContent())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTimestamp());
      hash = (37 * hash) + CONTENT_FIELD_NUMBER;
      hash = (53 * hash) + getContent().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.telemetry.TelemetryOuterClass.TelemetryRowGPB parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.telemetry.TelemetryOuterClass.TelemetryRowGPB parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.telemetry.TelemetryOuterClass.TelemetryRowGPB parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.telemetry.TelemetryOuterClass.TelemetryRowGPB parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.telemetry.TelemetryOuterClass.TelemetryRowGPB parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.telemetry.TelemetryOuterClass.TelemetryRowGPB parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.telemetry.TelemetryOuterClass.TelemetryRowGPB parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.telemetry.TelemetryOuterClass.TelemetryRowGPB parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.telemetry.TelemetryOuterClass.TelemetryRowGPB parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.telemetry.TelemetryOuterClass.TelemetryRowGPB parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.telemetry.TelemetryOuterClass.TelemetryRowGPB parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.telemetry.TelemetryOuterClass.TelemetryRowGPB parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.telemetry.TelemetryOuterClass.TelemetryRowGPB prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code telemetry.TelemetryRowGPB}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:telemetry.TelemetryRowGPB)
        com.telemetry.TelemetryOuterClass.TelemetryRowGPBOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.telemetry.TelemetryOuterClass.internal_static_telemetry_TelemetryRowGPB_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.telemetry.TelemetryOuterClass.internal_static_telemetry_TelemetryRowGPB_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.telemetry.TelemetryOuterClass.TelemetryRowGPB.class, com.telemetry.TelemetryOuterClass.TelemetryRowGPB.Builder.class);
      }

      // Construct using com.telemetry.TelemetryOuterClass.TelemetryRowGPB.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        timestamp_ = 0L;

        content_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.telemetry.TelemetryOuterClass.internal_static_telemetry_TelemetryRowGPB_descriptor;
      }

      @java.lang.Override
      public com.telemetry.TelemetryOuterClass.TelemetryRowGPB getDefaultInstanceForType() {
        return com.telemetry.TelemetryOuterClass.TelemetryRowGPB.getDefaultInstance();
      }

      @java.lang.Override
      public com.telemetry.TelemetryOuterClass.TelemetryRowGPB build() {
        com.telemetry.TelemetryOuterClass.TelemetryRowGPB result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.telemetry.TelemetryOuterClass.TelemetryRowGPB buildPartial() {
        com.telemetry.TelemetryOuterClass.TelemetryRowGPB result = new com.telemetry.TelemetryOuterClass.TelemetryRowGPB(this);
        result.timestamp_ = timestamp_;
        result.content_ = content_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.telemetry.TelemetryOuterClass.TelemetryRowGPB) {
          return mergeFrom((com.telemetry.TelemetryOuterClass.TelemetryRowGPB)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.telemetry.TelemetryOuterClass.TelemetryRowGPB other) {
        if (other == com.telemetry.TelemetryOuterClass.TelemetryRowGPB.getDefaultInstance()) return this;
        if (other.getTimestamp() != 0L) {
          setTimestamp(other.getTimestamp());
        }
        if (other.getContent() != com.google.protobuf.ByteString.EMPTY) {
          setContent(other.getContent());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.telemetry.TelemetryOuterClass.TelemetryRowGPB parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.telemetry.TelemetryOuterClass.TelemetryRowGPB) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long timestamp_ ;
      /**
       * <pre>
       *采样当前实例的时间戳，GPB编码时编码为1。
       * </pre>
       *
       * <code>uint64 timestamp = 1;</code>
       * @return The timestamp.
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <pre>
       *采样当前实例的时间戳，GPB编码时编码为1。
       * </pre>
       *
       * <code>uint64 timestamp = 1;</code>
       * @param value The timestamp to set.
       * @return This builder for chaining.
       */
      public Builder setTimestamp(long value) {
        
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *采样当前实例的时间戳，GPB编码时编码为1。
       * </pre>
       *
       * <code>uint64 timestamp = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimestamp() {
        
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString content_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       *承载的采样实例数据，GPB编码时编码为11，需要结合sensor_path字段，才可以判断此处会以哪个proto文件编码。
       * </pre>
       *
       * <code>bytes content = 11;</code>
       * @return The content.
       */
      public com.google.protobuf.ByteString getContent() {
        return content_;
      }
      /**
       * <pre>
       *承载的采样实例数据，GPB编码时编码为11，需要结合sensor_path字段，才可以判断此处会以哪个proto文件编码。
       * </pre>
       *
       * <code>bytes content = 11;</code>
       * @param value The content to set.
       * @return This builder for chaining.
       */
      public Builder setContent(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *承载的采样实例数据，GPB编码时编码为11，需要结合sensor_path字段，才可以判断此处会以哪个proto文件编码。
       * </pre>
       *
       * <code>bytes content = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearContent() {
        
        content_ = getDefaultInstance().getContent();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:telemetry.TelemetryRowGPB)
    }

    // @@protoc_insertion_point(class_scope:telemetry.TelemetryRowGPB)
    private static final com.telemetry.TelemetryOuterClass.TelemetryRowGPB DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.telemetry.TelemetryOuterClass.TelemetryRowGPB();
    }

    public static com.telemetry.TelemetryOuterClass.TelemetryRowGPB getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TelemetryRowGPB>
        PARSER = new com.google.protobuf.AbstractParser<TelemetryRowGPB>() {
      @java.lang.Override
      public TelemetryRowGPB parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TelemetryRowGPB(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TelemetryRowGPB> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TelemetryRowGPB> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.telemetry.TelemetryOuterClass.TelemetryRowGPB getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_telemetry_Telemetry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_telemetry_Telemetry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_telemetry_TelemetryGPBTable_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_telemetry_TelemetryGPBTable_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_telemetry_TelemetryRowGPB_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_telemetry_TelemetryRowGPB_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017telemetry.proto\022\ttelemetry\"\376\002\n\tTelemet" +
      "ry\022\023\n\013node_id_str\030\001 \001(\t\022\033\n\023subscription_" +
      "id_str\030\002 \001(\t\022\023\n\013sensor_path\030\003 \001(\t\022\025\n\rcol" +
      "lection_id\030\004 \001(\004\022\035\n\025collection_start_tim" +
      "e\030\005 \001(\004\022\025\n\rmsg_timestamp\030\006 \001(\004\022.\n\010data_g" +
      "pb\030\007 \001(\0132\034.telemetry.TelemetryGPBTable\022\033" +
      "\n\023collection_end_time\030\010 \001(\004\022\026\n\016current_p" +
      "eriod\030\t \001(\r\022\023\n\013except_desc\030\n \001(\t\022\024\n\014prod" +
      "uct_name\030\013 \001(\t\022/\n\010encoding\030\014 \001(\0162\035.telem" +
      "etry.Telemetry.Encoding\"\034\n\010Encoding\022\020\n\014E" +
      "ncoding_GPB\020\000\"<\n\021TelemetryGPBTable\022\'\n\003ro" +
      "w\030\001 \003(\0132\032.telemetry.TelemetryRowGPB\"5\n\017T" +
      "elemetryRowGPB\022\021\n\ttimestamp\030\001 \001(\004\022\017\n\007con" +
      "tent\030\013 \001(\014B\017\n\rcom.telemetryb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_telemetry_Telemetry_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_telemetry_Telemetry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_telemetry_Telemetry_descriptor,
        new java.lang.String[] { "NodeIdStr", "SubscriptionIdStr", "SensorPath", "CollectionId", "CollectionStartTime", "MsgTimestamp", "DataGpb", "CollectionEndTime", "CurrentPeriod", "ExceptDesc", "ProductName", "Encoding", });
    internal_static_telemetry_TelemetryGPBTable_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_telemetry_TelemetryGPBTable_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_telemetry_TelemetryGPBTable_descriptor,
        new java.lang.String[] { "Row", });
    internal_static_telemetry_TelemetryRowGPB_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_telemetry_TelemetryRowGPB_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_telemetry_TelemetryRowGPB_descriptor,
        new java.lang.String[] { "Timestamp", "Content", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
